SELECT
    c.NAME AS CONCEPT_NAME,
    c.CODE AS CONCEPT_CODE,
    COUNT(o.ID) AS CONCEPT_COUNT,
    'REFERENCE_DDS_SNOMED' AS CONCEPT_TYPE,
    'SNOMED' AS VOCABULARY,
    -- Quartile values
    APPROX_PERCENTILE(TRY_CAST(o.RESULT_VALUE AS FLOAT), 0.25) AS LQ_VALUE,
    APPROX_PERCENTILE(TRY_CAST(o.RESULT_VALUE AS FLOAT), 0.5) AS MEDIAN_VALUE,
    APPROX_PERCENTILE(TRY_CAST(o.RESULT_VALUE AS FLOAT), 0.75) AS UQ_VALUE,
    -- Percentage of non-null result values
    (COUNT(o.RESULT_VALUE) * 100.0 / NULLIF(COUNT(o.ID), 0)) AS PERCENT_HAS_RESULT_VALUE,
    -- Array of distinct result units for Snowflake
    ARRAY_AGG(DISTINCT CASE WHEN o.RESULT_VALUE_UNITS IS NOT NULL THEN o.RESULT_VALUE_UNITS END) AS RESULT_UNITS_ARRAY,
    -- Age percentiles
    APPROX_PERCENTILE(o.AGE_AT_EVENT, 0.25) AS LQ_AGE,
    APPROX_PERCENTILE(o.AGE_AT_EVENT, 0.5) AS MEDIAN_AGE,
    APPROX_PERCENTILE(o.AGE_AT_EVENT, 0.75) AS UQ_AGE,
    -- Year distribution as percentages (even more efficient)
    (COUNT_IF(EXTRACT(YEAR FROM o.CLINICAL_EFFECTIVE_DATE) IN (2015, 2016)) * 100.0 / NULLIF(COUNT(o.ID), 0)) AS PCT_2015_2016,
    (COUNT_IF(EXTRACT(YEAR FROM o.CLINICAL_EFFECTIVE_DATE) IN (2017, 2018)) * 100.0 / NULLIF(COUNT(o.ID), 0)) AS PCT_2017_2018,
    (COUNT_IF(EXTRACT(YEAR FROM o.CLINICAL_EFFECTIVE_DATE) IN (2019, 2020)) * 100.0 / NULLIF(COUNT(o.ID), 0)) AS PCT_2019_2020,
    (COUNT_IF(EXTRACT(YEAR FROM o.CLINICAL_EFFECTIVE_DATE) IN (2021, 2022)) * 100.0 / NULLIF(COUNT(o.ID), 0)) AS PCT_2021_2022,
    (COUNT_IF(EXTRACT(YEAR FROM o.CLINICAL_EFFECTIVE_DATE) IN (2023, 2024)) * 100.0 / NULLIF(COUNT(o.ID), 0)) AS PCT_2023_2024
FROM PROD_DWH.ANALYST_PRIMARY_CARE.CONCEPT c
LEFT JOIN PROD_DWH.ANALYST_PRIMARY_CARE.OBSERVATION o
    ON o.CORE_CONCEPT_ID = c.DBID
WHERE c.SCHEME = 71
GROUP BY c.NAME, c.CODE, c.SCHEME_NAME
ORDER BY CONCEPT_COUNT DESC;